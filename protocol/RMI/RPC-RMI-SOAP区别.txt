1.RPC与RMI区别:
	1.1.RPC:(Remote Procedure Call)
			被设计为在应用程序间通信的平台中立的方式，它不理会操作系统之间以及语言之间的差异。支持多语言。
	1.2.RMI:(Remote Method Invocation)
			RMI采用JRMP(Java Remote Method Protocol)通讯协议，是构建在TCP/IP协议上的一种远程调用方法。
			RMI采用stubs和skeletons来进行远程对象的通讯。
				stub充当远程对象的客户端Client代理(Proxy),有者和远程对象相同的远程接口。
				远程对象的调用实际是通过调用该对象的客户端Client代理对象stub来完成的。
	1.3.RMI与RPC区别:
			1)方法时如何被调用的???
				对于RMI来说，如果一个方法在服务器上执行，但是没有相匹配的签名被添加到这个远程接口上，
				那么这个新方法就不能被RMI客户方所调用。

				而在RPC中，当一个请求到达RPC服务器时，请求包含一个参数集合一个文本值，通常为"classname.methodname"形式。
				这表明，请求的方法在"classname"类中，名叫"methodname".
				然后，RPC服务器就去搜索与之相配配的类和方法，并把它作为那种方法参数类型的输入。
				这里的参数类型是与RPC请求中的类型匹配的。一旦匹配成功，方法就被调用了，其结果被编码后返回客户端。
			2)对传递信息的限制
				RMI调用远程对象方法，允许方法返回Java对象以及基本数据类型。
				而RPC不允许传递对象，RPC服务的消息由外部数据表示(External Data Representation,XDR)语言来表示。
			3)采用的协议不同
				RPC不支持对象，采用http协议。RMI支持传输对象，采用TCP/IP协议
			4)RMI限制于Java语言，而RPC跨语言。
			另外，RMI优于RPC或SOAP的一点是：在程序开发过程中因为对象或方法不匹配造成的错误可以在编译期被发现，而不用等到运行期
==============================================================================================================================
2.RPC,SOAP的关系??
	2.1.RPC
		如果要调用远端的一个方法，可以使用RMI和RPC，这是2种截然不同的风格。
		RMI(Remote Method Invocation)直接获取远端方法的签名，进行调用。
			--优点是强类型、编译期可检查错误；
		    --缺点是只限于Java语言。
		RPC(Remote Procedure Call)采用客户端/服务器方式(请求/响应),发送请求到服务器端，服务器端执行方法后返回结果。
			--优点是跨平台；
			--缺点是编译期无法排除错，只能在运行时检查。
	2.2.SOAP
		为了包装RPC的请求信息，推出了XML-RPC，但XML-RPC只能使用有限的数据类型种类和一些简单的数据结构。于是就出现了
		SOAP(Simple Object Access Protocol).SOAP最主要的工作是使用标准的XML描述了RPC的请求信息(URI/类/方法/参数/返回值)
		.理论上，SOAP就是一段xml,你可以通过http，smtp等发送它.同样SOAP也是跨语言的。



